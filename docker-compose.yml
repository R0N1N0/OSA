version: '3.8'

services:
  mysql:
    image: mysql:8.0.36-bookworm
    #ports:
    #  - '3306:3306'
    #  - '33060:33060'
    environment:
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_RANDOM_ROOT_PASSWORD=true
      - MYSQL_DATABASE=${DB_DATABASE}
    volumes:
     - ./Database/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
     - db_data:/var/lib/mysql
    networks:
      osa-network:
        aliases:
          - mysql
        ipv4_address: 192.168.176.2

  nodejs:
    build:
      context: Backend
      dockerfile: nodejs.Dockerfile
    ports:
      - '3000:3000'
    environment:
      - DB_HOST=mysql
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - TOKEN_SECRET=${TOKEN_SECRET}
    depends_on:
      - mysql
    volumes:
      - ./Backend/app:/Backend/app
    networks:
      osa-network:
        aliases:
          - nodejs
        ipv4_address: 192.168.176.3

  nginx:
    image: nginx:1.25.4-alpine
    ports:
      - '80:80'
    volumes:
      - ./Frontend/src:/usr/share/nginx/html
      #- ./Frontend/nginx.conf:/etc/nginx/nginx.conf
      - ./Frontend/default.conf:/etc/nginx/conf.d/default.conf
      - nginx_logs:/var/log/nginx
    depends_on:
      - nodejs
      - mysql
    networks:
      osa-network:
        aliases:
          - nginx
        ipv4_address: 192.168.176.4

volumes:
  nginx_logs:
    name: "nginx_logs"
    external: false
  db_data:
    name: "db_data"
    external: false

networks:
  osa-network:
    driver: bridge
    name: osa-network
    ipam:
      config:
        - subnet: "192.168.176.0/20"
          gateway: "192.168.176.1"
