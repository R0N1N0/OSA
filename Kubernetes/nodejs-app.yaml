apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nodejs
  template:
    metadata:
      labels:
        app: nodejs
    spec:
      containers:
      - name: nodejs
        image: <IMAGE>
        resources:
          limits:
            memory: "64Mi"
            cpu: "250m" 
        ports:
        - containerPort: 3000
        env:
        - name: DB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: DB_DATABASE
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: DB_USER
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: DB_PORT
          # secrets
        - name: DB_PASSWORD1
          valueFrom:
            secretKeyRef:
              name: backendsecrets
              key: DB_PASSWORD1
        - name: DB_PASSWORD2
          valueFrom:
            secretKeyRef:
              name: backendsecrets
              key: DB_PASSWORD2
        - name: TOKEN_SECRET1
          valueFrom:
            secretKeyRef:
              name: backendsecrets
              key: TOKEN_SECRET1
        - name: TOKEN_SECRET2
          valueFrom:
            secretKeyRef:
              name: backendsecrets
              key: TOKEN_SECRET2
        - name: CLOUD_NAME
          valueFrom:
            secretKeyRef:
              name: backendsecrets
              key: CLOUD_NAME
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: backendsecrets
              key: API_KEY
        - name: API_SECRET1
          valueFrom:
            secretKeyRef:
              name: backendsecrets
              key: API_SECRET1
        - name: API_SECRET2
          valueFrom:
            secretKeyRef:
              name: backendsecrets
              key: API_SECRET2

---

apiVersion: v1
kind: Service
metadata:
  name: nodejs-service
  annotations:
    kubernetes.digitalocean.com/load-balancer-id: "ams3-load-balancer-02"
    service.beta.kubernetes.io/do-loadbalancer-name: "nodejs"
    service.beta.kubernetes.io/do-loadbalancer-hostname: "nodejs.osaproject.es"
    service.beta.kubernetes.io/do-loadbalancer-size-unit: "1"
    service.beta.kubernetes.io/do-loadbalancer-disable-lets-encrypt-dns-records: "false"
    service.beta.kubernetes.io/do-loadbalancer-protocol: "http"
    #service.beta.kubernetes.io/do-loadbalancer-tls-ports: "3000"
    #service.beta.kubernetes.io/do-loadbalancer-certificate-id: "6302ce53-e2a0-40c2-b7af-5ade2aa203fa"
spec:
  type: LoadBalancer
  selector:
    app: nodejs
  ports:
    - name: http
      protocol: TCP
      port: 3000
      targetPort: 3000
    - name: http
      protocol: TCP
      port: 80
      targetPort: 3000